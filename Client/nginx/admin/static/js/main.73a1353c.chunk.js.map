{"version":3,"sources":["history/history.jsx","utils/axios/axiosManage.js","views/components/Login/Login.jsx","_actions/UserAction.jsx","views/components/Menu/Menu.jsx","views/components/User/UserMenuList.jsx","views/components/User/UserAdd.jsx","views/components/User/UserList.jsx","views/components/User/UserModify.jsx","views/components/Notice/NoticeMenuList.jsx","views/components/Notice/NoticeAdd.jsx","views/components/Notice/NoticeList.jsx","views/components/Notice/NoticeModify.jsx","views/components/Challenge/ChallengeMenuList.jsx","views/components/Challenge/ChallengeAdd.jsx","views/components/Challenge/ChallengeList.jsx","views/components/Challenge/ChallengeModify.jsx","views/components/Log/LogList.jsx","views/components/Log/LoginLog.jsx","views/components/Log/FlagLog.jsx","views/components/Log/DownloadLog.jsx","views/App.js","_reducers/index.jsx","_reducers/UserReducer.jsx","index.js"],"names":["history","createBrowserHistory","get","url","a","headers","Authorization","sessionStorage","getItem","axios","result","data","response","status","Refresh","success","push","removeItem","window","location","href","deleteRequest","delete","post","addheaders","Object","assign","console","log","login","refreshToken","setItem","token","accessToken","Login","dispatch","useDispatch","Email","useRef","Password","useState","ErrorMsg","setErrorMsg","LoginHandler","e","preventDefault","current","value","LoginData","userId","password","loginResult","dispatchData","type","payload","className","src","onSubmit","TextField","placeholder","fullWidth","variant","inputRef","Menu","Move","target","onClick","UserMenuList","UserAdd","useSelector","state","isAdmin","setIsAdmin","Name","Nick","SendRequest","email","nickname","name","usertype","Result","toast","error","label","InputLabelProps","shrink","style","width","marginTop","Switch","checked","onChange","inputProps","Button","color","RenderUserList","React","memo","props","UserList","List","component","backgroundColor","map","item","ListItem","String","id","button","ListItemText","primary","nick","textAlign","userLists","setUserLists","load","setLoad","useEffect","userList","height","duration","UserModify","UserInfo","setUserInfo","match","params","userInfo","userInfoMapper","ModifyUserIdRequset","ModifyNickRequset","ModifyPasswordRequest","ModifyIsBanRequest","ban","isBan","ModifyIsAdminRequest","admin","ModifyTeamRequest","team","defaultValue","size","startIcon","marginLeft","Select","MenuItem","NoticeMenuList","AddNotice","NoticeContent","NoticeTitle","CreateNotice","noticeTitle","noticeContent","replace","multiline","rows","NoticeListRender","NoticeData","NoticeList","Load","NoticeListData","setNoticeListData","noticeList","reverse","CircularProgress","NoticeModify","noticeId","setNoticeData","open","setOpen","NoticeInfo","notice","handleClose","NoticeModifyRequest","NoticeDeleteRequest","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","ChallengeMenuList","Add","CategorySelected","setCategorySelected","File","setFile","FileName","setFileName","ChallengeTitle","ChallengeDescription","ChallengeFlag","AddChallengeRequest","changebr","challengeName","challengeDescription","challengeCategory","challengeFlag","AddChallengeFile","formData","FormData","append","uploadResult","InputProps","labelId","hidden","reader","FileReader","onloadend","files","readAsDataURL","LoadChallengeList","ChallengeListData","ChallengeList","setChallengeList","selectType","setSelectType","challenge","challengeList","length","ChallengeModify","challengeId","ChallengeInfo","setChallengeInfo","getChallengeInfo","challengeFileName","ModifyChallengeNameRequest","ModifyChallengeCategoryRequest","ModifyChallengeDescriptionRequest","ModifyChallengeFlagRequest","ModifyChallengeOpenRequest","ModifyChallengeFileRequest","ChallengeDeleteRequest","challengeOpen","timeParse","timedata","time","Date","getFullYear","toString","getMonth","slice","getDate","getHours","getMinutes","getSeconds","LoginLog","setLog","totalCount","setTotalCount","currentPage","setCurrentPage","searchType","setSearchType","tempSearchType","setTempSearchType","inputData","countData","count","logData","logList","searchHandler","searchInit","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","index","ip","createdAt","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","page","ref","FlagLog","flag","Nav","App","LoginRedux","user","LoginState","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","exact","path","render","persistConfig","key","storage","storageSession","rootReducer","combineReducers","action","persistedReducer","persistReducer","composedEnhancers","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","promiseMiddlerware","reduxThunk","createStore","store","persistor","persistStore","configureStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.73a1353c.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\nexport default history;\r\n","import axios from \"axios\";\r\nimport history from \"../../history/history\";\r\n\r\nexport async function get(url) {\r\n    const headers = {\r\n        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n    };\r\n    try {\r\n        const result = await axios.get(`/api${url}`, {\r\n            headers\r\n        });\r\n        return { data: result.data };\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            const RefreshResult = await Refresh();\r\n            if (RefreshResult.success === true) {\r\n                try {\r\n                    const headers = {\r\n                        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                    };\r\n\r\n                    const result = await axios.get(`/api${url}`, {\r\n                        headers\r\n                    });\r\n                    return { data: result.data };\r\n                } catch (err) {\r\n                    history.push(\"/login\");\r\n                }\r\n            } else {\r\n                sessionStorage.removeItem(\"persist:root\");\r\n                window.location.href = \"/login\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function deleteRequest(url) {\r\n    const headers = {\r\n        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n    };\r\n    try {\r\n        const result = await axios.delete(`/api${url}`, {\r\n            headers\r\n        });\r\n        return result;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            const RefreshResult = await Refresh();\r\n            if (RefreshResult.success === true) {\r\n                try {\r\n                    const headers = {\r\n                        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                    };\r\n\r\n                    const result = await axios.delete(`/api${url}`, {\r\n                        headers\r\n                    });\r\n                    return result;\r\n                } catch (err) {\r\n                    history.push(\"/login\");\r\n                }\r\n            } else {\r\n                sessionStorage.removeItem(\"persist:root\");\r\n                window.location.href = \"/login\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function post(url, data, addheaders = null) {\r\n    let headers = {\r\n        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n    };\r\n\r\n    if (addheaders !== null) {\r\n        Object.assign(headers, addheaders);\r\n    }\r\n    try {\r\n        const result = await axios.post(`/api${url}`, data, {\r\n            headers\r\n        });\r\n        return { data: result.data };\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            const RefreshResult = await Refresh();\r\n            if (RefreshResult.success === true) {\r\n                try {\r\n                    let headers = {\r\n                        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                    };\r\n                    if (addheaders !== null) {\r\n                        Object.assign(headers, addheaders);\r\n                    }\r\n                    console.log(headers);\r\n                    const result = await axios.post(`/api${url}`, data, {\r\n                        headers\r\n                    });\r\n                    return { data: result.data };\r\n                } catch (err) {\r\n                    if (err) {\r\n                        return { data: err.response.data };\r\n                    }\r\n                }\r\n            } else {\r\n                sessionStorage.removeItem(\"persist:root\");\r\n                window.location.href = \"/login\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function login(data) {\r\n    const headers = {\r\n        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n    };\r\n    try {\r\n        const result = await axios.post(`/api/login`, data, {\r\n            headers\r\n        });\r\n        return { data: result.data };\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function put(url, data) {\r\n    const headers = {\r\n        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n    };\r\n    try {\r\n        const result = await axios.put(`/api${url}`, data, {\r\n            headers\r\n        });\r\n        return { data: result.data };\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            const RefreshResult = await Refresh();\r\n            if (RefreshResult.success) {\r\n                try {\r\n                    const headers = {\r\n                        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                    };\r\n\r\n                    const result = await axios.put(`/api${url}`, data, {\r\n                        headers\r\n                    });\r\n                    return { data: result.data };\r\n                } catch (err) {\r\n                    sessionStorage.removeItem(\"persist:root\");\r\n                    window.location.href = \"/login\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function patch(url, data, addheaders = null) {\r\n    const headers = {\r\n        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n    };\r\n    if (addheaders !== null) {\r\n        Object.assign(headers, addheaders);\r\n    }\r\n    try {\r\n        const result = await axios.patch(`/api${url}`, data, {\r\n            headers\r\n        });\r\n        return { data: result.data };\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            const RefreshResult = await Refresh();\r\n            if (RefreshResult.success) {\r\n                try {\r\n                    const headers = {\r\n                        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                    };\r\n\r\n                    const result = await axios.put(`/api${url}`, data, {\r\n                        headers\r\n                    });\r\n                    return { data: result.data };\r\n                } catch (err) {\r\n                    sessionStorage.removeItem(\"persist:root\");\r\n                    window.location.href = \"/login\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function Refresh() {\r\n    const headers = {\r\n        refreshToken: sessionStorage.getItem(\"refreshToken\")\r\n    };\r\n    try {\r\n        const result = await axios.get(`/api/auth/refresh`, {\r\n            headers\r\n        });\r\n\r\n        if (result.data.success === true) {\r\n            sessionStorage.setItem(\"accessToken\", result.data.token.accessToken);\r\n            sessionStorage.setItem(\"refreshToken\", result.data.token.refreshToken);\r\n            return { success: true, data: result.data };\r\n        }\r\n    } catch (err) {\r\n        if (err.response.status) {\r\n            return { success: false };\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./Login.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LoginUser } from \"../../../_actions/UserAction\";\r\nimport history from \"../../../history/history\";\r\nimport axios from \"axios\";\r\nimport { login } from \"../../../utils/axios/axiosManage\";\r\nexport default function Login() {\r\n    const dispatch = useDispatch();\r\n    const Email = useRef();\r\n    const Password = useRef();\r\n    const [ErrorMsg, setErrorMsg] = useState(\"\");\r\n    const LoginHandler = async e => {\r\n        e.preventDefault();\r\n        if (Email.current.value == \"\" || Password.current.value == \"\") {\r\n            setErrorMsg(\"아이디 또는 비밀번호를 입력해주세요.\");\r\n        } else {\r\n            setErrorMsg(\"\");\r\n            const LoginData = {\r\n                userId: Email.current.value,\r\n                password: Password.current.value\r\n            };\r\n\r\n            const loginResult = await login(LoginData);\r\n\r\n            if (loginResult.data.success) {\r\n                const dispatchData = {\r\n                    success: true\r\n                };\r\n                sessionStorage.setItem(\"accessToken\", loginResult.data.accessToken);\r\n                sessionStorage.setItem(\"refreshToken\", loginResult.data.refreshToken);\r\n\r\n                dispatch(LoginUser(dispatchData));\r\n                history.push(\"/\");\r\n            } else {\r\n                setErrorMsg(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"LoginWrap\">\r\n            <div className=\"LoginLogo\">\r\n                <img src=\"/yisfplayer.png\" />\r\n                <div className=\"LoginLogoText\">위습 플레이어</div>\r\n            </div>\r\n            <div className=\"LoginText\">위습 관리자 페이지</div>\r\n            <form onSubmit={LoginHandler}>\r\n                <div className=\"LoginFormWrap\">\r\n                    <div className=\"FormWrap\">\r\n                        <TextField\r\n                            placeholder=\"이메일\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            inputRef={Email}\r\n                        />\r\n                    </div>\r\n                    <div className=\"FormWrap\">\r\n                        <TextField\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            inputRef={Password}\r\n                        />\r\n                    </div>\r\n                    <div className=\"LoginHelpText\">{ErrorMsg}</div>\r\n                    <button className=\"LoginBtn\" type=\"submit\">\r\n                        로그인\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","export function LoginUser(LoginResult) {\r\n    return {\r\n        type: \"LOGIN_USER\",\r\n        payload: LoginResult\r\n    };\r\n}\r\n\r\nexport function LogoutUser() {\r\n    return {\r\n        type: \"LOGOUT_USER\"\r\n    };\r\n}\r\nexport function Init() {\r\n    return {\r\n        type: \"INIT\"\r\n    };\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"./Menu.css\";\r\nimport history from \"../../../history/history\";\r\nexport default function Menu() {\r\n    const Move = target => {\r\n        history.push(`/${target}`);\r\n    };\r\n    return (\r\n        <div className=\"MenuWrap\">\r\n            <div className=\"MenuList\">\r\n                <div\r\n                    className=\"MenuListItem\"\r\n                    onClick={() => {\r\n                        Move(\"user\");\r\n                    }}\r\n                >\r\n                    <img src=\"/register.svg\" />\r\n                    <div className=\"MenuListItemText\">회원 관리</div>\r\n                </div>\r\n                <div\r\n                    className=\"MenuListItem\"\r\n                    onClick={() => {\r\n                        Move(\"notice\");\r\n                    }}\r\n                >\r\n                    <img src=\"/notice.svg\" />\r\n                    <div className=\"MenuListItemText\">공지 사항 관리</div>\r\n                </div>\r\n                <div\r\n                    className=\"MenuListItem\"\r\n                    onClick={() => {\r\n                        Move(\"challenge\");\r\n                    }}\r\n                >\r\n                    <img src=\"/challenge.svg\" />\r\n                    <div className=\"MenuListItemText\">문제 관리</div>\r\n                </div>\r\n                <div\r\n                    className=\"MenuListItem\"\r\n                    onClick={() => {\r\n                        Move(\"log\");\r\n                    }}\r\n                >\r\n                    <img src=\"/log.svg\" />\r\n                    <div className=\"MenuListItemText\">로그 확인</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport history from \"../../../history/history\";\r\nexport default function UserMenuList() {\r\n    const Move = target => {\r\n        history.push(`/user/${target}`);\r\n    };\r\n    return (\r\n        <div className=\"UserMenuListWrap\">\r\n            <div className=\"MenuList\">\r\n                {/* <div className=\"MenuListItem\" onClick={() => Move(\"add\")}>\r\n          <img src=\"/adduser.svg\" />\r\n          <div className=\"MenuListItemText\">회원 추가</div>\r\n        </div> */}\r\n                <div className=\"MenuListItem\" onClick={() => Move(\"list\")}>\r\n                    <img src=\"/edituser.svg\" />\r\n                    <div className=\"MenuListItemText\">회원 정보 수정</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./UserAdd.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { post } from \"../../../utils/axios/axiosManage\";\r\nimport history from \"../../../history/history\";\r\nexport default function UserAdd() {\r\n    const LoginRedux = useSelector(state => state);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const Email = useRef(\"\");\r\n    const Password = useRef(\"\");\r\n    const Name = useRef(\"\");\r\n    const Nick = useRef(\"\");\r\n    const ChangeIsAdmin = e => {\r\n        setIsAdmin(e.target.checked);\r\n    };\r\n    const SendRequest = async () => {\r\n        const data = {\r\n            email: Email.current.value,\r\n            nickname: Nick.current.value,\r\n            password: Password.current.value,\r\n            name: Name.current.value,\r\n            usertype: isAdmin\r\n        };\r\n        const Result = await post(\"/user/admin\", data);\r\n        console.log(Result);\r\n        if (Result !== null) {\r\n            toast.success(\"유저 추가 완료\");\r\n            history.push(\"/\");\r\n        } else {\r\n            toast.error(\"유저 추가 실패\");\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"UserAddWrap\">\r\n                <TextField\r\n                    placeholder=\"이메일\"\r\n                    fullWidth\r\n                    label=\"이메일\"\r\n                    variant=\"outlined\"\r\n                    inputRef={Email}\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    style={{ width: 500, marginTop: 50 }}\r\n                />\r\n                <TextField\r\n                    placeholder=\"비밀번호\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    label=\"비밀번호\"\r\n                    variant=\"outlined\"\r\n                    inputRef={Password}\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    style={{ width: 500, marginTop: 50 }}\r\n                />\r\n                <TextField\r\n                    placeholder=\"이름(실명)\"\r\n                    fullWidth\r\n                    label=\"이름(실명)\"\r\n                    variant=\"outlined\"\r\n                    inputRef={Name}\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    style={{ width: 500, marginTop: 50 }}\r\n                />\r\n                <TextField\r\n                    placeholder=\"닉네임\"\r\n                    label=\"닉네임\"\r\n                    fullWidth\r\n                    inputRef={Nick}\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    style={{ width: 500, marginTop: 50 }}\r\n                />\r\n                <div className=\"SwitchIsAdmin\">\r\n                    운영진 권한 설정\r\n                    <Switch\r\n                        checked={isAdmin}\r\n                        onChange={ChangeIsAdmin}\r\n                        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                    />\r\n                </div>\r\n                <div className=\"UserAddBtn\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={SendRequest}>\r\n                        회원 추가\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport history from \"../../../history/history\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport \"./UserList.css\";\r\nimport { get } from \"../../../utils/axios/axiosManage\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst RenderUserList = React.memo(function RenderUserList(props) {\r\n    const Move = target => {\r\n        history.push(`/user/modify/${target}`);\r\n    };\r\n    const UserList = props.UserList;\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-label=\"main mailbox folders\"\r\n            style={{ backgroundColor: \"#efefef\" }}\r\n        >\r\n            {UserList.map(item => {\r\n                return (\r\n                    <ListItem\r\n                        onClick={() => {\r\n                            Move(String(item.id));\r\n                        }}\r\n                        button\r\n                    >\r\n                        <ListItemText\r\n                            primary={item.nick}\r\n                            style={{\r\n                                textAlign: \"center\"\r\n                            }}\r\n                        />\r\n                    </ListItem>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n});\r\n\r\nexport default function UserList() {\r\n    const [userLists, setUserLists] = useState();\r\n    const [load, setLoad] = useState(false);\r\n    useEffect(async () => {\r\n        const userLists = await get(\"/manage/user\");\r\n        if (userLists.data.success) {\r\n            setUserLists(userLists.data.userList);\r\n            setLoad(true);\r\n        }\r\n    }, []);\r\n\r\n    if (load) {\r\n        return (\r\n            <div className=\"UserListWrap\">\r\n                <div className=\"UserListHelp\">수정 하고자 하는 유저를 선택 (Ctrl + F) </div>\r\n                <RenderUserList UserList={userLists} />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"UserListWrap\">\r\n                    <div className=\"UserListHelp\">수정 하고자 하는 유저를 선택 (Ctrl + F) </div>\r\n                    <Skeleton width={\"50%px\"} height={\"50vh\"} duration={0.5} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./UserModify.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { get, patch, post } from \"../../../utils/axios/axiosManage\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nexport default function UserModify(props) {\r\n    const [UserInfo, setUserInfo] = useState();\r\n    const [load, setLoad] = useState(false);\r\n    const userId = useRef(\"\");\r\n    const nick = useRef(\"\");\r\n    const password = useRef(\"\");\r\n\r\n    useEffect(async () => {\r\n        const userInfo = await get(`/manage/user/${props.match.params.userId}`);\r\n        if (userInfo.data.success) {\r\n            setUserInfo(userInfo.data.userInfoMapper);\r\n            setLoad(true);\r\n        }\r\n    }, []);\r\n\r\n    const ModifyRequest = async data => {\r\n        const modifyResult = await patch(`/manage/user/${props.match.params.userId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        }\r\n    };\r\n\r\n    const ModifyUserIdRequset = async () => {\r\n        const data = { userId: userId.current.value };\r\n        const modifyResult = await post(`/manage/user/id/${props.match.params.userId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        }\r\n    };\r\n\r\n    const ModifyNickRequset = async () => {\r\n        const data = { nick: nick.current.value };\r\n        const modifyResult = await post(`/manage/user/nick/${props.match.params.userId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        }\r\n    };\r\n\r\n    const ModifyPasswordRequest = async () => {\r\n        const data = { password: password.current.value };\r\n        const modifyResult = await post(`/manage/user/password/${props.match.params.userId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        }\r\n    };\r\n\r\n    const ModifyIsBanRequest = async () => {\r\n        const data = { ban: UserInfo.isBan };\r\n        const modifyResult = await post(`/manage/user/ban/${props.match.params.userId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        }\r\n    };\r\n\r\n    const ModifyIsAdminRequest = async () => {\r\n        const data = { admin: UserInfo.isAdmin };\r\n        const modifyResult = await post(`/manage/user/admin/${props.match.params.userId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        }\r\n    };\r\n\r\n    const ModifyTeamRequest = async () => {\r\n        const data = { team: UserInfo.team };\r\n        const modifyResult = await post(`/manage/user/team/${props.match.params.userId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        }\r\n    };\r\n\r\n    const ChangeAdminType = e => {\r\n        setUserInfo({ ...UserInfo, isAdmin: e.target.checked });\r\n    };\r\n\r\n    const ChangeBanUser = e => {\r\n        setUserInfo({ ...UserInfo, isBan: e.target.checked });\r\n    };\r\n\r\n    const teamChange = e => {\r\n        setUserInfo({ ...UserInfo, team: e.target.value });\r\n    };\r\n    if (load) {\r\n        return (\r\n            <>\r\n                <div className=\"UserModifyWrap\">\r\n                    <div className=\"UserModifyItemList\">\r\n                        <div className=\"UserModifyItem\">\r\n                            <TextField\r\n                                label=\"ID\"\r\n                                variant=\"outlined\"\r\n                                defaultValue={UserInfo.userId}\r\n                                style={{ width: 400 }}\r\n                                inputRef={userId}\r\n                            ></TextField>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={() => {\r\n                                    ModifyUserIdRequset();\r\n                                }}\r\n                                style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            >\r\n                                수정\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"UserModifyItem\">\r\n                            <TextField\r\n                                label=\"닉네임\"\r\n                                variant=\"outlined\"\r\n                                style={{ width: 400 }}\r\n                                defaultValue={UserInfo.nick}\r\n                                inputRef={nick}\r\n                            ></TextField>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={() => {\r\n                                    ModifyNickRequset();\r\n                                }}\r\n                                style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            >\r\n                                수정\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"UserModifyItem\">\r\n                            <Select value={UserInfo.team} onChange={teamChange}>\r\n                                <MenuItem value={\"null\"}>소속 선택</MenuItem>\r\n                                <MenuItem value={\"SecurityFirst_YB\"}>Security YB</MenuItem>\r\n                                <MenuItem value={\"SecurityFirst_OB\"}>Security OB</MenuItem>\r\n                                <MenuItem value={\"외부참가자\"}>외부 참가자</MenuItem>\r\n                            </Select>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={() => {\r\n                                    ModifyTeamRequest();\r\n                                }}\r\n                                style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            >\r\n                                수정\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"UserModifyItem\">\r\n                            <TextField\r\n                                label=\"비밀번호 변경\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                inputRef={password}\r\n                                style={{ width: 400 }}\r\n                            ></TextField>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={() => {\r\n                                    ModifyPasswordRequest();\r\n                                }}\r\n                                style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            >\r\n                                수정\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"UserModifyItem\">\r\n                            벤 유무\r\n                            <Switch\r\n                                checked={UserInfo.isBan}\r\n                                onChange={ChangeBanUser}\r\n                                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                            />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={() => {\r\n                                    ModifyIsBanRequest();\r\n                                }}\r\n                                style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            >\r\n                                수정\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"UserModifyItem\">\r\n                            어드민 유무\r\n                            <Switch\r\n                                checked={UserInfo.isAdmin}\r\n                                onChange={ChangeAdminType}\r\n                                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                            />\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={() => {\r\n                                    ModifyIsAdminRequest();\r\n                                }}\r\n                                style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            >\r\n                                수정\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <div className=\"UserModifyWrap\">\r\n                    <div className=\"UserModifyItemList\">\r\n                        <Skeleton width={\"50%px\"} height={\"50vh\"} duration={0.5} />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport history from \"../../../history/history\";\r\nexport default function NoticeMenuList() {\r\n  const Move = (target) => {\r\n    history.push(`/notice/${target}`);\r\n  };\r\n  return (\r\n    <div className=\"UserMenuListWrap\">\r\n      <div className=\"MenuList\">\r\n        <div className=\"MenuListItem\" onClick={() => Move(\"add\")}>\r\n          <img src=\"/addnotice.svg\" />\r\n          <div className=\"MenuListItemText\">공지 추가</div>\r\n        </div>\r\n        <div className=\"MenuListItem\" onClick={() => Move(\"list\")}>\r\n          <img src=\"/editnotice.svg\" />\r\n          <div className=\"MenuListItemText\">공지 수정</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { post } from \"../../../utils/axios/axiosManage\";\r\nimport \"./NoticeAdd.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport history from \"../../../history/history\";\r\nexport default function AddNotice() {\r\n    const NoticeContent = useRef(\"\");\r\n    const NoticeTitle = useRef(\"\");\r\n\r\n    const CreateNotice = async () => {\r\n        const data = {\r\n            noticeTitle: NoticeTitle.current.value,\r\n            noticeContent: NoticeContent.current.value.replace(/\\n/g, \"<br/>\")\r\n        };\r\n        if (NoticeTitle.current.value == \"\" || NoticeContent.current.value == -\"\") {\r\n            toast.error(\"입력하지 않은 값이 있습니다.\");\r\n        } else {\r\n            const result = await post(\"/manage/notice\", data);\r\n            if (result.data.success === true) {\r\n                toast.success(\"공지 추가 완료\");\r\n                history.push(\"/notice\");\r\n            } else {\r\n                toast.error(\"공지 추가 실패\");\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"AddNoticeWrap\">\r\n            <div className=\"AddNoticeItemList\">\r\n                <div className=\"AddNoticeItem\">\r\n                    <TextField\r\n                        placeholder=\"공지사항 제목\"\r\n                        label=\"공지사항 제목\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        inputRef={NoticeTitle}\r\n                        style={{ width: 900, marginTop: 50 }}\r\n                    />\r\n                </div>\r\n                <div className=\"AddNoticeItem\">\r\n                    <TextField\r\n                        placeholder=\"공지사항 내용\"\r\n                        label=\"공지사항 내용\"\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={10}\r\n                        InputLabelProps={{\r\n                            shrink: true\r\n                        }}\r\n                        inputRef={NoticeContent}\r\n                        style={{ width: 900, marginTop: 50 }}\r\n                    />\r\n                </div>\r\n                <div className=\"AddNoticeItem\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        style={{ marginTop: 50 }}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={CreateNotice}\r\n                    >\r\n                        공지 추가\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport history from \"../../../history/history\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { get } from \"../../../utils/axios/axiosManage\";\r\nimport { toast } from \"react-toastify\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./NoticeList.css\";\r\n\r\nconst NoticeListRender = props => {\r\n    const NoticeData = props.data;\r\n    const Move = target => {\r\n        history.push(`/notice/modify/${target}`);\r\n    };\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-label=\"main mailbox folders\"\r\n            style={{ backgroundColor: \"#efefef\" }}\r\n        >\r\n            {NoticeData.map(item => {\r\n                return (\r\n                    <ListItem\r\n                        onClick={() => {\r\n                            Move(item.id);\r\n                        }}\r\n                        button\r\n                    >\r\n                        <ListItemText\r\n                            primary={item.noticeTitle}\r\n                            style={{\r\n                                textAlign: \"center\"\r\n                            }}\r\n                        />\r\n                    </ListItem>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n};\r\nexport default function NoticeList() {\r\n    const [Load, setLoad] = useState(false);\r\n    const [NoticeListData, setNoticeListData] = useState();\r\n    useEffect(async () => {\r\n        const NoticeData = await get(\"/notice\");\r\n        if (NoticeData.data.success === true) {\r\n            setNoticeListData(NoticeData.data.noticeList.reverse());\r\n            setLoad(true);\r\n        }\r\n    }, []);\r\n    if (Load) {\r\n        return (\r\n            <div className=\"NoticeListWrap\">\r\n                <div className=\"NoticeListHelp\">수정 하고자 하는 공지를 선택 (Ctrl + F)</div>\r\n                <NoticeListRender data={NoticeListData} />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"NoticeListWrap\">\r\n                <div className=\"NoticeListHelp\">수정 하고자 하는 공지를 선택 (Ctrl + F)</div>\r\n                <div className=\"NoticeListLoading\">\r\n                    <CircularProgress />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport \"./NoticeModify.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { toast } from \"react-toastify\";\r\nimport history from \"../../../history/history\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { get, patch, deleteRequest, post } from \"../../../utils/axios/axiosManage\";\r\nexport default function NoticeModify(props) {\r\n    const { noticeId } = props.match.params;\r\n    const [NoticeData, setNoticeData] = useState();\r\n    const [Load, setLoad] = useState();\r\n    const NoticeTitle = useRef();\r\n    const NoticeContent = useRef();\r\n    const [open, setOpen] = useState(false);\r\n    useEffect(async () => {\r\n        const NoticeInfo = await get(`/notice/${noticeId}`);\r\n        if (NoticeInfo.data.success === true) {\r\n            setNoticeData(NoticeInfo.data.notice);\r\n            setLoad(true);\r\n        }\r\n    }, []);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const NoticeModifyRequest = async () => {\r\n        const data = {\r\n            noticeTitle: NoticeTitle.current.value,\r\n            noticeContent: NoticeContent.current.value.replace(/\\n/g, \"<br/>\")\r\n        };\r\n        const result = await post(`/manage/notice/${noticeId}`, data);\r\n        if (result.data.success === true) {\r\n            toast.success(\"공지 수정 완료\");\r\n        } else {\r\n            toast.error(\"공지 수정 실패\");\r\n        }\r\n    };\r\n    \r\n    const NoticeDeleteRequest = async () => {\r\n        const result = await deleteRequest(`/manage/notice/${noticeId}`);\r\n        if (result.data.success) {\r\n            handleClose();\r\n            toast.success(\"공지 삭제 완료\");\r\n            history.push(\"/notice\");\r\n        } else {\r\n            handleClose();\r\n            toast.error(\"공지 삭제 실패\");\r\n        }\r\n    };\r\n    if (Load) {\r\n        return (\r\n            <div className=\"NoticeModifyWrap\">\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle>{\"공지 삭제\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>공지를 삭제하시겠습니까?</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={NoticeDeleteRequest} color=\"primary\">\r\n                            네\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                            아니요\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <div className=\"NoticeModifyItemList\">\r\n                    <div className=\"NoticeModifyItem\">\r\n                        <TextField\r\n                            label=\"공지사항 제목\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            defaultValue={NoticeData.noticeTitle}\r\n                            inputRef={NoticeTitle}\r\n                            style={{ width: 900 }}\r\n                        ></TextField>\r\n                    </div>\r\n                    <div className=\"UserModifyItem\">\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            placeholder=\"공지사항 내용\"\r\n                            label=\"공지사항 내용\"\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            rows={10}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            inputRef={NoticeContent}\r\n                            style={{ width: 900, marginTop: 50 }}\r\n                            defaultValue={NoticeData.noticeContent.replace(\r\n                                /(<br>|<br\\/>|<br \\/>)/g,\r\n                                \"\\r\\n\"\r\n                            )}\r\n                        ></TextField>\r\n                    </div>\r\n                    <div className=\"NoticeModifyBtnWrap\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            style={{ marginTop: 50 }}\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={NoticeModifyRequest}\r\n                        >\r\n                            공지 수정\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            style={{ marginTop: 50 }}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleClickOpen}\r\n                        >\r\n                            공지 삭제\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <></>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport history from \"../../../history/history\";\r\nexport default function ChallengeMenuList() {\r\n  const Move = (target) => {\r\n    history.push(`/challenge/${target}`);\r\n  };\r\n  return (\r\n    <div className=\"UserMenuListWrap\">\r\n      <div className=\"MenuList\">\r\n        <div className=\"MenuListItem\" onClick={() => Move(\"add\")}>\r\n          <img src=\"/addnotice.svg\" />\r\n          <div className=\"MenuListItemText\">문제 추가</div>\r\n        </div>\r\n        <div className=\"MenuListItem\" onClick={() => Move(\"list\")}>\r\n          <img src=\"/editnotice.svg\" />\r\n          <div className=\"MenuListItemText\">문제 수정</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { post } from \"../../../utils/axios/axiosManage\";\r\nimport history from \"../../../history/history\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./ChallengeAdd.css\";\r\nexport default function Add() {\r\n    const [CategorySelected, setCategorySelected] = useState(\"null\");\r\n    const [File, setFile] = useState(null); //파일\r\n    const [FileName, setFileName] = useState(\"\");\r\n    const ChallengeTitle = useRef(\"\");\r\n    const ChallengeDescription = useRef(\"\");\r\n    const ChallengeFlag = useRef(\"\");\r\n\r\n    const SelectCategory = e => {\r\n        setCategorySelected(e.target.value);\r\n    };\r\n\r\n    const SelectFile = e => {\r\n        let reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            const file = reader.result;\r\n            if (file) {\r\n                setFileName(e.target.files[0].name);\r\n                setFile(e.target.files[0]); // 파일 상태 업데이트\r\n            }\r\n        };\r\n        if (e.target.files[0]) {\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const AddChallengeRequest = async () => {\r\n        if (\r\n            ChallengeTitle.current.value !== \"\" &&\r\n            CategorySelected !== \"null\" &&\r\n            ChallengeDescription.current.value !== \"\" &&\r\n            ChallengeFlag.current.value !== \"\"\r\n        ) {\r\n           \r\n            const changebr = ChallengeDescription.current.value.replace(/\\n/g, \"<br/>\");\r\n\r\n            const result = await post(\"/manage/challenge\", {\r\n                challengeName: ChallengeTitle.current.value,\r\n                challengeDescription: changebr,\r\n                challengeCategory: CategorySelected,\r\n                challengeFlag: ChallengeFlag.current.value\r\n            });\r\n\r\n            if (result.data.success === true) {\r\n\r\n                if (File != null) {\r\n                    const uploadResult = await AddChallengeFile(result.data.id);\r\n                    if (uploadResult) {\r\n                        toast.success(\"문제 추가 완료\");\r\n                        history.push(\"/challenge\");\r\n                        return;\r\n                    }\r\n                    else {\r\n                        toast.error(\"문제 추가 실패\");\r\n                        return;\r\n                    }\r\n                }   \r\n                toast.success(\"문제 추가 완료\");\r\n                history.push(\"/challenge\");\r\n                return;\r\n            } else {\r\n                toast.error(\"문제 추가 실패\");\r\n                return;\r\n            }\r\n        } else {\r\n            toast.error(\"입력하지 않은 값이 있습니다.\");\r\n            return;\r\n        }\r\n    };\r\n\r\n    const AddChallengeFile = async (id) => {\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", File);\r\n\r\n        const uploadResult = await post(`/manage/challenge/file/${id}`, formData, {\r\n            headers: {\r\n                 \"Content-Type\" : \"multipart/form-data\" \r\n            }\r\n          });\r\n\r\n        return uploadResult.data.success     \r\n    }\r\n\r\n    return (\r\n        <div className=\"AddChallengewrap\">\r\n            <div className=\"InputChallengeTitle\">\r\n                <TextField\r\n                    label=\"문제 제목\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputProps={{ style: { width: 260, height: 40 } }}\r\n                    inputRef={ChallengeTitle}\r\n                />\r\n            </div>\r\n            <div className=\"InputChallengeCategory\">\r\n                <Select\r\n                    value={CategorySelected}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    onChange={SelectCategory}\r\n                >\r\n                    <MenuItem value={\"null\"}>문제 분야 선택</MenuItem>\r\n                    <MenuItem value={\"reversing\"}>리버싱</MenuItem>\r\n                    <MenuItem value={\"forensic\"}>포렌식</MenuItem>\r\n                    <MenuItem value={\"pwnable\"}>포너블</MenuItem>\r\n                    <MenuItem value={\"web\"}>웹</MenuItem>\r\n                    <MenuItem value={\"misc\"}>MISC</MenuItem>\r\n                    <MenuItem value={\"event\"}>EVENT</MenuItem>\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"InputChallengeTitle\">\r\n                <TextField\r\n                    label=\"문제 설명\"\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    rows={5}\r\n                    InputProps={{ style: { width: 1000 } }}\r\n                    inputRef={ChallengeDescription}\r\n                />\r\n            </div>\r\n            <div className=\"InputChallengeFlag\">\r\n                <TextField\r\n                    label=\"문제 플래그\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputProps={{ style: { width: 400, height: 40 } }}\r\n                    inputRef={ChallengeFlag}\r\n                />\r\n            </div>\r\n            <div className=\"ChallengeFileWrap\">\r\n                <div className=\"ChallengeZip\">\r\n                    <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n                        <input type=\"file\" hidden onChange={SelectFile} />\r\n                        첨부파일 추가하기\r\n                    </Button>\r\n                </div>\r\n                <div className=\"FileName\">첨부된 파일: {FileName}</div>\r\n            </div>\r\n            <div className=\"AddChallengeButton\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"primary\"\r\n                    onClick={AddChallengeRequest}\r\n                >\r\n                    문제 추가하기\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport history from \"../../../history/history\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport \"./ChallengeList.css\";\r\nimport { get } from \"../../../utils/axios/axiosManage\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nconst LoadChallengeList = props => {\r\n    const Move = target => {\r\n        history.push(`/challenge/modify/${target}`);\r\n    };\r\n    const ChallengeListData = props.ChallengeListData;\r\n    return ChallengeListData.map(item => {\r\n        return (\r\n            <>\r\n                <ListItem\r\n                    onClick={() => {\r\n                        Move(item.id);\r\n                    }}\r\n                    button\r\n                >\r\n                    <ListItemText\r\n                        primary={`문제 ID:${item.id}  ` + item.challengeName}\r\n                        style={{ textAlign: \"center\" }}\r\n                    />\r\n                </ListItem>\r\n            </>\r\n        );\r\n    });\r\n};\r\nexport default function ChallengeList() {\r\n    const [ChallengeList, setChallengeList] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n    const [selectType, setSelectType] = useState(\"web\");\r\n    useEffect(async () => {\r\n        setChallengeList([]);\r\n        const challenge = await get(`/manage/challenge/category/${selectType}`);\r\n        if (challenge.data.challengeList.length >= 1) {\r\n            setChallengeList(challenge.data.challengeList);\r\n        }\r\n    }, [selectType]);\r\n    const ChangeType = e => {\r\n        setSelectType(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ChallengeListWrap\">\r\n            <div className=\"ChallengeListHelp\">수정 하고자 하는 문제를 선택</div>\r\n            <div className=\"ChallengeListTypeSelect\">\r\n                <Select\r\n                    value={selectType}\r\n                    style={{ width: 200, textAlign: \"center\" }}\r\n                    onChange={ChangeType}\r\n                >\r\n                    <MenuItem value={\"web\"}>WEB</MenuItem>\r\n                    <MenuItem value={\"pwnable\"}>PWNABLE</MenuItem>\r\n                    <MenuItem value={\"reversing\"}>REVERSING</MenuItem>\r\n                    <MenuItem value={\"forensic\"}>FORENSIC</MenuItem>\r\n                    <MenuItem value={\"misc\"}>MISC</MenuItem>\r\n                    <MenuItem value={\"event\"}>EVENT</MenuItem>\r\n                </Select>\r\n            </div>\r\n            <List\r\n                component=\"nav\"\r\n                aria-label=\"main mailbox folders\"\r\n                style={{ backgroundColor: \"#efefef\" }}\r\n            >\r\n                <LoadChallengeList ChallengeListData={ChallengeList} />\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { toast } from \"react-toastify\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { get, post, deleteRequest } from \"../../../utils/axios/axiosManage\";\r\nimport history from \"../../../history/history\";\r\nimport \"./ChallengeModify.css\";\r\nexport default function ChallengeModify(props) {\r\n    const { challengeId } = props.match.params;\r\n    const [ChallengeInfo, setChallengeInfo] = useState({});\r\n    const [Load, setLoad] = useState(false);\r\n    const [CategorySelected, setCategorySelected] = useState();\r\n    const [File, setFile] = useState(null); //파일\r\n    const [FileName, setFileName] = useState(\"\");\r\n    const ChallengeTitle = useRef();\r\n    const ChallengeDescription = useRef();\r\n    const ChallengeFlag = useRef();\r\n    const [open, setOpen] = useState(false);\r\n    useEffect(async () => {\r\n        const getChallengeInfo = await get(`/manage/challenge/${challengeId}`);\r\n        setChallengeInfo(getChallengeInfo.data.challenge);\r\n        setCategorySelected(getChallengeInfo.data.challenge.challengeCategory);\r\n        setFileName(getChallengeInfo.data.challenge.challengeFileName)\r\n        setLoad(true);\r\n    }, []);\r\n\r\n    const SelectCategory = e => {\r\n        setCategorySelected(e.target.value);\r\n    };\r\n\r\n    const ChangeActiveHandler = e => {\r\n        setChallengeInfo({ ...ChallengeInfo, challengeOpen: e.target.checked });\r\n    };\r\n\r\n    const ModifyChallengeNameRequest = async data => {\r\n        const modifyResult = await post(`/manage/challenge/name/${challengeId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        } else {\r\n            toast.error(\"수정 실패\");\r\n        }\r\n    };\r\n\r\n    const ModifyChallengeCategoryRequest = async data => {\r\n        \r\n        const modifyResult = await post(`/manage/challenge/category/${challengeId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        } else {\r\n            toast.error(\"수정 실패\");\r\n        }\r\n    };\r\n\r\n    const ModifyChallengeDescriptionRequest = async() => {\r\n        const changebr = ChallengeDescription.current.value.replace(\r\n            /\\n/g,\r\n            \"<br/>\"\r\n        );\r\n        const modifyResult = await post(`/manage/challenge/description/${challengeId}`, {challengeDescription: changebr});\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        } else {\r\n            toast.error(\"수정 실패\");\r\n        }\r\n    };\r\n\r\n    const ModifyChallengeFlagRequest = async data => {\r\n        const modifyResult = await post(`/manage/challenge/flag/${challengeId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        } else {\r\n            toast.error(\"수정 실패\");\r\n        }\r\n    };\r\n\r\n    const ModifyChallengeOpenRequest = async data => {\r\n        const modifyResult = await post(`/manage/challenge/open/${challengeId}`, data);\r\n        if (modifyResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        } else {\r\n            toast.error(\"수정 실패\");\r\n        }\r\n    };\r\n\r\n    const ModifyChallengeFileRequest = async () => {\r\n        if (File === null) {\r\n            toast.error(\"파일을 선택해주세요\"); \r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append(\"file\", File);\r\n\r\n        const uploadResult = await post(`/manage/challenge/file/${challengeId}`, formData, {\r\n            headers: {\r\n                 \"Content-Type\" : \"multipart/form-data\" \r\n            }\r\n          });\r\n\r\n        if (uploadResult.data.success === true) {\r\n            toast.success(\"수정 완료\");\r\n        } else {\r\n            toast.error(\"수정 실패\");\r\n        }  \r\n    }\r\n    const SelectFile = e => {\r\n        let reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            const file = reader.result;\r\n            if (file) {\r\n                setFileName(e.target.files[0].name);\r\n                setFile(e.target.files[0]); // 파일 상태 업데이트\r\n            }\r\n        };\r\n        if (e.target.files[0]) {\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const ChallengeDeleteRequest = async () => {\r\n        const result = await deleteRequest(`/manage/challenge/${challengeId}`);\r\n        if (result.status === 200) {\r\n            handleClose();\r\n            toast.success(\"문제 삭제 완료\");\r\n            history.push(\"/challenge\");\r\n        } else {\r\n            handleClose();\r\n            toast.error(\"문제 삭제 실패\");\r\n        }\r\n    };\r\n    if (Load) {\r\n        return (\r\n            <div className=\"ChallengeModifyWrap\">\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle>{\"문제 삭제\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>문제를 삭제하시겠습니까?</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={ChallengeDeleteRequest} color=\"primary\">\r\n                            네\r\n                        </Button>\r\n                        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                            아니요\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <div className=\"ChallengeModifyItemList\">\r\n                    <div className=\"ChallengeModifyItem\">\r\n                        <TextField\r\n                            label=\"문제 제목\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            defaultValue={ChallengeInfo.challengeName}\r\n                            InputProps={{ style: { width: 260, height: 40 } }}\r\n                            inputRef={ChallengeTitle}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            startIcon={<SaveIcon />}\r\n                            onClick={() => {\r\n                                ModifyChallengeNameRequest({ challengeName: ChallengeTitle.current.value });\r\n                            }}\r\n                            style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                        >\r\n                            수정\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"ChallengeModifyItem\">\r\n                        <Select\r\n                            value={CategorySelected}\r\n                            defaultValue={ChallengeInfo.challengeCategory}\r\n                            labelId=\"demo-simple-select-helper-label\"\r\n                            id=\"demo-simple-select-helper\"\r\n                            onChange={SelectCategory}\r\n                        >\r\n                            <MenuItem value={\"null\"}>문제 분야 선택</MenuItem>\r\n                            <MenuItem value={\"reversing\"}>리버싱</MenuItem>\r\n                            <MenuItem value={\"forensic\"}>포렌식</MenuItem>\r\n                            <MenuItem value={\"pwnable\"}>포너블</MenuItem>\r\n                            <MenuItem value={\"web\"}>웹</MenuItem>\r\n                            <MenuItem value={\"misc\"}>MISC</MenuItem>\r\n                            <MenuItem value={\"event\"}>EVENT</MenuItem>\r\n                        </Select>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            startIcon={<SaveIcon />}\r\n                            style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            onClick={() => {\r\n                                ModifyChallengeCategoryRequest({ challengeCategory: CategorySelected });\r\n                            }}\r\n                        >\r\n                            수정\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"ChallengeModifyItem\">\r\n                        <TextField\r\n                            label=\"문제 설명\"\r\n                            multiline\r\n                            defaultValue={ChallengeInfo.challengeDescription.replace(\r\n                                /(<br>|<br\\/>|<br \\/>)/g,\r\n                                \"\\r\\n\"\r\n                            )}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            rows={5}\r\n                            InputProps={{ style: { width: 1000 } }}\r\n                            inputRef={ChallengeDescription}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            startIcon={<SaveIcon />}\r\n                            style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            onClick={() => {\r\n                                ModifyChallengeDescriptionRequest();\r\n                            }}\r\n                        >\r\n                            수정\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"ChallengeModifyItem\">\r\n                        <TextField\r\n                            label=\"문제 플래그\"\r\n                            variant=\"outlined\"\r\n                            defaultValue={ChallengeInfo.challengeFlag}\r\n                            size=\"small\"\r\n                            InputProps={{ style: { width: 400, height: 40 } }}\r\n                            inputRef={ChallengeFlag}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            startIcon={<SaveIcon />}\r\n                            style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            onClick={() => {\r\n                                ModifyChallengeFlagRequest({ challengeFlag: ChallengeFlag.current.value });\r\n                            }}\r\n                        >\r\n                            수정\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"ChallengeModifyItem\">\r\n                        문제 Open 유무\r\n                        <Switch\r\n                            name=\"checkedA\"\r\n                            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                            checked={ChallengeInfo.challengeOpen}\r\n                            onChange={ChangeActiveHandler}\r\n                        />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            startIcon={<SaveIcon />}\r\n                            style={{ width: 75, height: 40, marginLeft: 20 }}\r\n                            onClick={() => {\r\n                                ModifyChallengeOpenRequest({ challengeOpen: ChallengeInfo.challengeOpen });\r\n                            }}\r\n                        >\r\n                            수정\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"ChallengeFileWrap\">\r\n                        <div className=\"ChallengeZip\">\r\n                            <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n                                <input type=\"file\" hidden onChange={SelectFile} />\r\n                                첨부파일 선택하기\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"ChallengeModifyBtnWrap\">\r\n                            <div className=\"FileName\">첨부된 파일: {FileName}</div>\r\n                            <div className=\"ModifyBtn\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    startIcon={<SaveIcon />}\r\n                                    style={{ width: 180, height: 40, marginLeft: 20 }}\r\n                                    onClick={() => {\r\n                                        ModifyChallengeFileRequest();\r\n                                    }}\r\n                                >\r\n                                    첨부파일 수정\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            style={{ marginTop: 50 }}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={handleClickOpen}\r\n                        >\r\n                            문제 삭제\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <></>;\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport history from \"../../../history/history\";\r\nimport \"./LogList.css\";\r\n\r\nexport default function NoticeMenuList() {\r\n    return (\r\n        <div className=\"LogListWrap\">\r\n            <div className=\"SelectLogTypeBox\">\r\n                <div\r\n                    className={\"SelectedButton\"}\r\n                    onClick={() => {\r\n                        history.push(\"/log/login\");\r\n                    }}\r\n                >\r\n                    로그인 로그\r\n                </div>\r\n                <div\r\n                    className={\"SelectedButton\"}\r\n                    onClick={() => {\r\n                        history.push(\"/log/download\");\r\n                    }}\r\n                >\r\n                    다운로드 로그\r\n                </div>\r\n                <div\r\n                    className={\"SelectedButton\"}\r\n                    onClick={() => {\r\n                        history.push(\"/log/flag\");\r\n                    }}\r\n                >\r\n                    플래그 인증 로그\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./LoginLog.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { get } from \"../../../utils/axios/axiosManage\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst timeParse = timedata => {\r\n    let time = new Date(timedata);\r\n    let year = time.getFullYear().toString(); //년도 뒤에 두자리\r\n    let month = (\"0\" + (time.getMonth() + 1)).slice(-2); //월 2자리 (01, 02 ... 12)\r\n    let day = (\"0\" + time.getDate()).slice(-2); //일 2자리 (01, 02 ... 31)\r\n    let hour = (\"0\" + time.getHours()).slice(-2); //시 2자리 (00, 01 ... 23)\r\n    let minute = (\"0\" + time.getMinutes()).slice(-2); //분 2자리 (00, 01 ... 59)\r\n    let second = (\"0\" + time.getSeconds()).slice(-2); //초 2자리 (00, 01 ... 59)\r\n    let returnDate = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second;\r\n    return returnDate;\r\n};\r\n\r\nexport default function LoginLog() {\r\n    const [log, setLog] = useState([]);\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [searchType, setSearchType] = useState(\"null\");\r\n    const [tempSearchType, setTempSearchType] = useState(\"null\");\r\n    const inputData = useRef(\"\");\r\n\r\n    useEffect(async () => {\r\n        const countData = await get(\"/manage/log/count/login\");\r\n        if (countData.data.success) setTotalCount(countData.data.count);\r\n        const logData = await get(\"/manage/log/login/1\");\r\n        if (logData.data.success) setLog(logData.data.logList);\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n        if (searchType === \"null\") {\r\n            const logData = await get(`/manage/log/login/${currentPage}`);\r\n            if (logData.data.success) setLog(logData.data.logList);\r\n            return;\r\n        } else {\r\n            const logData = await get(\r\n                `/manage/log/login/${tempSearchType}/${inputData.current.value}/${currentPage}`\r\n            );\r\n            setLog(logData.data.logList);\r\n        }\r\n    }, [currentPage]);\r\n\r\n    const changePageHandler = page => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    const changeSearchTypeHandler = e => {\r\n        setTempSearchType(e.target.value);\r\n    };\r\n\r\n    const searchHandler = async e => {\r\n        if (tempSearchType !== \"null\" && inputData.current.value !== \"\") {\r\n            setSearchType(tempSearchType);\r\n            const countData = await get(\r\n                `/manage/log/count/login/${tempSearchType}/${inputData.current.value}`\r\n            );\r\n            setTotalCount(countData.data.count);\r\n            const logData = await get(\r\n                `/manage/log/login/${tempSearchType}/${inputData.current.value}/1`\r\n            );\r\n            setLog(logData.data.logList);\r\n            setCurrentPage(1);\r\n        } else {\r\n            toast.error(\"검색 조건, 검색어를 입력해주세요.\");\r\n        }\r\n    };\r\n\r\n    const searchInit = async () => {\r\n        const countData = await get(\"/manage/log/count/login\");\r\n        if (countData.data.success) setTotalCount(countData.data.count);\r\n        const logData = await get(\"/manage/log/login/1\");\r\n        if (logData.data.success) setLog(logData.data.logList);\r\n        setSearchType(\"null\");\r\n        setTempSearchType(\"null\");\r\n        setCurrentPage(1);\r\n        inputData.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"LogWrap\">\r\n            <TableContainer className=\"TableWrap\" component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">닉네임</TableCell>\r\n                            <TableCell align=\"center\">IP</TableCell>\r\n                            <TableCell align=\"center\">로그인 시간</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {log.map((item, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell align=\"center\">{item.nick}</TableCell>\r\n                                <TableCell align=\"center\">{item.ip}</TableCell>\r\n                                <TableCell align=\"center\">{timeParse(item.createdAt)}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div>\r\n                <Pagination\r\n                    activePage={currentPage}\r\n                    itemsCountPerPage={10}\r\n                    totalItemsCount={totalCount}\r\n                    pageRangeDisplayed={5}\r\n                    onChange={changePageHandler}\r\n                />\r\n            </div>\r\n            <div className=\"searchWrap\">\r\n                <Select\r\n                    value={tempSearchType}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    onChange={changeSearchTypeHandler}\r\n                >\r\n                    <MenuItem value={\"null\"}>검색 조건</MenuItem>\r\n                    <MenuItem value={\"ip\"}>IP</MenuItem>\r\n                    <MenuItem value={\"nick\"}>닉네임</MenuItem>\r\n                </Select>\r\n                <input className=\"searchInput\" ref={inputData}></input>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ width: 50, height: 35, marginLeft: 20 }}\r\n                    onClick={searchHandler}\r\n                >\r\n                    검색\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ width: 50, height: 35, marginLeft: 20 }}\r\n                    onClick={searchInit}\r\n                >\r\n                    초기화\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./LoginLog.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { get } from \"../../../utils/axios/axiosManage\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst timeParse = timedata => {\r\n    let time = new Date(timedata);\r\n    let year = time.getFullYear().toString(); //년도 뒤에 두자리\r\n    let month = (\"0\" + (time.getMonth() + 1)).slice(-2); //월 2자리 (01, 02 ... 12)\r\n    let day = (\"0\" + time.getDate()).slice(-2); //일 2자리 (01, 02 ... 31)\r\n    let hour = (\"0\" + time.getHours()).slice(-2); //시 2자리 (00, 01 ... 23)\r\n    let minute = (\"0\" + time.getMinutes()).slice(-2); //분 2자리 (00, 01 ... 59)\r\n    let second = (\"0\" + time.getSeconds()).slice(-2); //초 2자리 (00, 01 ... 59)\r\n    let returnDate = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second;\r\n    return returnDate;\r\n};\r\n\r\nconst successParse = success => {\r\n    if (success) {\r\n        return <div className=\"successText\">성공</div>;\r\n    } else {\r\n        return <div className=\"failText\">실패</div>;\r\n    }\r\n};\r\nexport default function FlagLog() {\r\n    const [log, setLog] = useState([]);\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [searchType, setSearchType] = useState(\"null\");\r\n    const [tempSearchType, setTempSearchType] = useState(\"null\");\r\n    const inputData = useRef(\"\");\r\n\r\n    useEffect(async () => {\r\n        const countData = await get(\"/manage/log/count/flag\");\r\n        if (countData.data.success) setTotalCount(countData.data.count);\r\n        const logData = await get(\"/manage/log/flag/1\");\r\n        if (logData.data.success) setLog(logData.data.logList);\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n        if (searchType === \"null\") {\r\n            const logData = await get(`/manage/log/flag/${currentPage}`);\r\n            if (logData.data.success) setLog(logData.data.logList);\r\n            return;\r\n        } else {\r\n            const logData = await get(\r\n                `/manage/log/flag/${tempSearchType}/${inputData.current.value}/${currentPage}`\r\n            );\r\n            setLog(logData.data.logList);\r\n        }\r\n    }, [currentPage]);\r\n\r\n    const changePageHandler = page => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    const changeSearchTypeHandler = e => {\r\n        setTempSearchType(e.target.value);\r\n    };\r\n\r\n    const searchHandler = async e => {\r\n        if (tempSearchType !== \"null\" && inputData.current.value !== \"\") {\r\n            setSearchType(tempSearchType);\r\n            const countData = await get(\r\n                `/manage/log/count/flag/${tempSearchType}/${inputData.current.value}`\r\n            );\r\n            setTotalCount(countData.data.count);\r\n            const logData = await get(\r\n                `/manage/log/flag/${tempSearchType}/${inputData.current.value}/1`\r\n            );\r\n            setLog(logData.data.logList);\r\n            setCurrentPage(1);\r\n        } else {\r\n            toast.error(\"검색 조건, 검색어를 입력해주세요.\");\r\n        }\r\n    };\r\n\r\n    const searchInit = async () => {\r\n        const countData = await get(\"/manage/log/count/flag\");\r\n        if (countData.data.success) setTotalCount(countData.data.count);\r\n        const logData = await get(\"/manage/log/flag/1\");\r\n        if (logData.data.success) setLog(logData.data.logList);\r\n        setSearchType(\"null\");\r\n        setTempSearchType(\"null\");\r\n        setCurrentPage(1);\r\n        inputData.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"LogWrap\">\r\n            <TableContainer className=\"TableWrap\" component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">문제 번호</TableCell>\r\n                            <TableCell align=\"center\">닉네임</TableCell>\r\n                            <TableCell align=\"center\">제출 플래그</TableCell>\r\n                            <TableCell align=\"center\">성공 유무</TableCell>\r\n                            <TableCell align=\"center\">아이피</TableCell>\r\n                            <TableCell align=\"center\">제출시간</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {log.map((item, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell align=\"center\">{item.challengeId}</TableCell>\r\n                                <TableCell align=\"center\">{item.nick}</TableCell>\r\n                                <TableCell align=\"center\">{item.flag}</TableCell>\r\n                                <TableCell align=\"center\">{successParse(item.success)}</TableCell>\r\n                                <TableCell align=\"center\">{item.ip}</TableCell>\r\n                                <TableCell align=\"center\">{timeParse(item.createdAt)}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div>\r\n                <Pagination\r\n                    activePage={currentPage}\r\n                    itemsCountPerPage={10}\r\n                    totalItemsCount={totalCount}\r\n                    pageRangeDisplayed={5}\r\n                    onChange={changePageHandler}\r\n                />\r\n            </div>\r\n            <div className=\"searchWrap\">\r\n                <Select\r\n                    value={tempSearchType}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    onChange={changeSearchTypeHandler}\r\n                >\r\n                    <MenuItem value={\"null\"}>검색 조건</MenuItem>\r\n                    <MenuItem value={\"id\"}>문제 번호</MenuItem>\r\n                    <MenuItem value={\"nick\"}>닉네임</MenuItem>\r\n                </Select>\r\n                <input className=\"searchInput\" ref={inputData}></input>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ width: 50, height: 35, marginLeft: 20 }}\r\n                    onClick={searchHandler}\r\n                >\r\n                    검색\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ width: 50, height: 35, marginLeft: 20 }}\r\n                    onClick={searchInit}\r\n                >\r\n                    초기화\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./LoginLog.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { get } from \"../../../utils/axios/axiosManage\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst timeParse = timedata => {\r\n    let time = new Date(timedata);\r\n    let year = time.getFullYear().toString(); //년도 뒤에 두자리\r\n    let month = (\"0\" + (time.getMonth() + 1)).slice(-2); //월 2자리 (01, 02 ... 12)\r\n    let day = (\"0\" + time.getDate()).slice(-2); //일 2자리 (01, 02 ... 31)\r\n    let hour = (\"0\" + time.getHours()).slice(-2); //시 2자리 (00, 01 ... 23)\r\n    let minute = (\"0\" + time.getMinutes()).slice(-2); //분 2자리 (00, 01 ... 59)\r\n    let second = (\"0\" + time.getSeconds()).slice(-2); //초 2자리 (00, 01 ... 59)\r\n    let returnDate = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second;\r\n    return returnDate;\r\n};\r\n\r\nconst successParse = success => {\r\n    if (success) {\r\n        return <div className=\"successText\">성공</div>;\r\n    } else {\r\n        return <div className=\"failText\">실패</div>;\r\n    }\r\n};\r\nexport default function FlagLog() {\r\n    const [log, setLog] = useState([]);\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [searchType, setSearchType] = useState(\"null\");\r\n    const [tempSearchType, setTempSearchType] = useState(\"null\");\r\n    const inputData = useRef(\"\");\r\n\r\n    useEffect(async () => {\r\n        const countData = await get(\"/manage/log/count/download\");\r\n        if (countData.data.success) setTotalCount(countData.data.count);\r\n        const logData = await get(\"/manage/log/download/1\");\r\n        if (logData.data.success) setLog(logData.data.logList);\r\n    }, []);\r\n\r\n    useEffect(async () => {\r\n        if (searchType === \"null\") {\r\n            const logData = await get(`/manage/log/download/${currentPage}`);\r\n            if (logData.data.success) setLog(logData.data.logList);\r\n            return;\r\n        } else {\r\n            const logData = await get(\r\n                `/manage/log/download/${tempSearchType}/${inputData.current.value}/${currentPage}`\r\n            );\r\n            setLog(logData.data.logList);\r\n        }\r\n    }, [currentPage]);\r\n\r\n    const changePageHandler = page => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    const changeSearchTypeHandler = e => {\r\n        setTempSearchType(e.target.value);\r\n    };\r\n\r\n    const searchHandler = async e => {\r\n        if (tempSearchType !== \"null\" && inputData.current.value !== \"\") {\r\n            setSearchType(tempSearchType);\r\n            const countData = await get(\r\n                `/manage/log/count/download/${tempSearchType}/${inputData.current.value}`\r\n            );\r\n            setTotalCount(countData.data.count);\r\n            const logData = await get(\r\n                `/manage/log/download/${tempSearchType}/${inputData.current.value}/1`\r\n            );\r\n            setLog(logData.data.logList);\r\n            setCurrentPage(1);\r\n        } else {\r\n            toast.error(\"검색 조건, 검색어를 입력해주세요.\");\r\n        }\r\n    };\r\n\r\n    const searchInit = async () => {\r\n        const countData = await get(\"/manage/log/count/download\");\r\n        if (countData.data.success) setTotalCount(countData.data.count);\r\n        const logData = await get(\"/manage/log/download/1\");\r\n        if (logData.data.success) setLog(logData.data.logList);\r\n        setSearchType(\"null\");\r\n        setTempSearchType(\"null\");\r\n        setCurrentPage(1);\r\n        inputData.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"LogWrap\">\r\n            <TableContainer className=\"TableWrap\" component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">문제 번호</TableCell>\r\n                            <TableCell align=\"center\">닉네임</TableCell>\r\n                            <TableCell align=\"center\">아이피</TableCell>\r\n                            <TableCell align=\"center\">다운로드 시간</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {log.map((item, index) => (\r\n                            <TableRow key={index}>\r\n                                <TableCell align=\"center\">{item.challengeId}</TableCell>\r\n                                <TableCell align=\"center\">{item.nick}</TableCell>\r\n                                <TableCell align=\"center\">{item.ip}</TableCell>\r\n                                <TableCell align=\"center\">{timeParse(item.createdAt)}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <div>\r\n                <Pagination\r\n                    activePage={currentPage}\r\n                    itemsCountPerPage={10}\r\n                    totalItemsCount={totalCount}\r\n                    pageRangeDisplayed={5}\r\n                    onChange={changePageHandler}\r\n                />\r\n            </div>\r\n            <div className=\"searchWrap\">\r\n                <Select\r\n                    value={tempSearchType}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    onChange={changeSearchTypeHandler}\r\n                >\r\n                    <MenuItem value={\"null\"}>검색 조건</MenuItem>\r\n                    <MenuItem value={\"id\"}>문제 번호</MenuItem>\r\n                    <MenuItem value={\"nick\"}>닉네임</MenuItem>\r\n                </Select>\r\n                <input className=\"searchInput\" ref={inputData}></input>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ width: 50, height: 35, marginLeft: 20 }}\r\n                    onClick={searchHandler}\r\n                >\r\n                    검색\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ width: 50, height: 35, marginLeft: 20 }}\r\n                    onClick={searchInit}\r\n                >\r\n                    초기화\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Init } from \"../_actions/UserAction\";\nimport history from \"../history/history\";\nimport Login from \"./components/Login/Login\";\nimport Menu from \"./components/Menu/Menu\";\nimport UserMenuList from \"./components/User/UserMenuList\";\nimport UserAdd from \"./components/User/UserAdd\";\nimport UserList from \"./components/User/UserList\";\nimport UserModify from \"./components/User/UserModify\";\nimport NoticeMenuList from \"./components/Notice/NoticeMenuList\";\nimport AddNotice from \"./components/Notice/NoticeAdd\";\nimport NoticeList from \"./components/Notice/NoticeList\";\nimport NoticeModify from \"./components/Notice/NoticeModify\";\nimport ChallengeMenuList from \"./components/Challenge/ChallengeMenuList\";\nimport ChallengeAdd from \"./components/Challenge/ChallengeAdd\";\nimport ChallengeList from \"./components/Challenge/ChallengeList\";\nimport ChallengeModify from \"./components/Challenge/ChallengeModify\";\nimport LogList from \"./components/Log/LogList\";\nimport LoginLog from \"./components/Log/LoginLog\";\nimport FlagLog from \"./components/Log/FlagLog\";\nimport DownloadLog from \"./components/Log/DownloadLog\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./App.css\";\nconst Move = target => {\n    history.push(`/${target}`);\n};\nconst Nav = props => {\n    return (\n        <div className=\"TopBtnWrap\">\n            <div className=\"TopBtn\">\n                <Button\n                    style={{ width: \"100%\" }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                        Move(\"\");\n                    }}\n                >\n                    메인\n                </Button>\n            </div>\n            <div className=\"TopBtn\">\n                <Button\n                    style={{ width: \"100%\" }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                        Move(\"user\");\n                    }}\n                >\n                    회원 관리\n                </Button>\n            </div>\n            <div className=\"TopBtn\">\n                <Button\n                    style={{ width: \"100%\" }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                        Move(\"notice\");\n                    }}\n                >\n                    공지사항 관리\n                </Button>\n            </div>\n            <div className=\"TopBtn\">\n                <Button\n                    style={{ width: \"100%\" }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                        Move(\"challenge\");\n                    }}\n                >\n                    문제 관리\n                </Button>\n            </div>\n            <div className=\"TopBtn\">\n                <Button\n                    style={{ width: \"100%\" }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                        Move(\"log\");\n                    }}\n                >\n                    로그 확인\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nfunction App() {\n    const LoginRedux = useSelector(state => state);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!LoginRedux.user) {\n            dispatch(Init());\n        }\n        if (!LoginRedux.user.login) {\n            dispatch(Init());\n        }\n    }, []);\n    const LoginState = LoginRedux.user.login.success;\n    return (\n        <Router history={history}>\n            <Nav />\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={3000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                draggable\n                pauseOnHover={false}\n            />\n            <Switch>\n                <Route\n                    exact\n                    path=\"/\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <Menu {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n\n                <Route\n                    exact\n                    path=\"/login\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <Menu {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/user\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <UserMenuList {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/user/add\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <UserAdd {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/user/list\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <UserList {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/user/modify/:userId\"\n                    render={props => <UserModify {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/notice\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <NoticeMenuList {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/notice/add\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <AddNotice {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/notice/list\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <NoticeList {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/notice/modify/:noticeId\"\n                    render={props => <NoticeModify {...props} />}\n                />\n                <Route\n                    exact\n                    path=\"/challenge\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <ChallengeMenuList {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/challenge/add\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <ChallengeAdd {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/challenge/list\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <ChallengeList {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/challenge/modify/:challengeId\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <ChallengeModify {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/log\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <LogList {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/log/login\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <LoginLog {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/log/flag\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <FlagLog {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"/log/download\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <DownloadLog {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n                <Route\n                    exact\n                    path=\"*\"\n                    render={props => {\n                        if (LoginState === true) {\n                            return <Menu {...props} />;\n                        } else {\n                            return <Login {...props} />;\n                        }\n                    }}\n                />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport user from \"./UserReducer\";\r\nimport promiseMiddlerware from \"redux-promise\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storageSession from \"redux-persist/lib/storage/session\";\r\nimport thunk from \"redux-thunk\";\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    // localStorage에 저장합니다.\r\n    storage: storageSession\r\n};\r\nconst rootReducer = combineReducers({\r\n    user\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\r\nconst composedEnhancers = compose(applyMiddleware(thunk), applyMiddleware(promiseMiddlerware));\r\n\r\nexport default () => {\r\n    const store = createStore(persistedReducer, composedEnhancers);\r\n    return { store, persistor: persistStore(store) };\r\n};\r\n","export default function (state = { login: { success: false } }, action) {\r\n    switch (action.type) {\r\n        case \"LOGIN_USER\":\r\n            return { ...state, login: action.payload };\r\n        case \"LOGOUT_USER\":\r\n            return { ...state, login: { success: false } };\r\n        case \"REFRESH_TOKEN\":\r\n            return { ...state, login: { refreshToken: action } };\r\n        case \"INIT\":\r\n            return { login: { success: false } };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./views/App\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport promiseMiddlerware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\nimport configureStore from \"./_reducers\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nconst createStoreWidthMiddleware = applyMiddleware(\n  promiseMiddlerware,\n  reduxThunk\n)(createStore);\nconst { persistor, store } = configureStore();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}