{"version":3,"sources":["history/history.js","utils/Axios.js","components/views/Login/Login.js","_actions/UserAction.js","components/views/Wargame/Wargame.js","components/views/Wargame/AddWargame.js","components/App.js","reportWebVitals.js","_reducers/UserReducer.js","_reducers/index.js","index.js"],"names":["history","createBrowserHistory","axios","defaults","withCredentials","request","method","url","data","process","then","res","catch","err","console","log","post","a","headers","Authorization","sessionStorage","getItem","result","response","status","Refresh","success","removeItem","window","location","href","login","refreshToken","get","setItem","token","accessToken","withStyles","theme","paper","display","flexDirection","alignItems","margin","spacing","avatar","backgroundColor","palette","secondary","main","form","width","marginTop","submit","props","classes","ID","useRef","Password","useState","ErrorMsg","setErrorMsg","dispatch","useDispatch","SubmitLogin","e","preventDefault","current","value","LoginData","userId","password","loginResult","dispatchData","type","payload","push","className","Container","maxWidth","noValidate","onSubmit","Grid","container","item","xs","TextField","placeholder","fullWidth","variant","inputRef","Main","src","Add","CategorySelected","setCategorySelected","StageSelected","setStageSelected","File","setFile","FileName","setFileName","ChallengeTitle","ChallengeDescription","ChallengeFlag","AddChallengeRequest","changebr","replace","challengeName","challengeDescription","challengeCategory","challengeStage","challengeFlag","AddChallengeFile","id","toast","error","formData","FormData","append","uploadResult","label","size","InputProps","style","height","Select","labelId","onChange","target","MenuItem","multiline","rows","Button","component","color","hidden","reader","FileReader","onloadend","files","name","readAsDataURL","onClick","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","exact","path","Login","Wargame","AddWargame","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loginSuccess","persistConfig","key","storage","rootReducer","combineReducers","user","state","action","persistedReducer","persistReducer","composedEnhancers","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","promiseMiddlerware","require","config","reduxThunk","createStore","store","persistor","persistStore","configureStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b173ff71.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\nexport default history;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true; // 쿠키 데이터를 전송받기 위해\r\nexport const request = (method, url, data) => {\r\n    return axios({\r\n        method,\r\n        url: process.env.REACT_APP_BACKEND_IP + url,\r\n        data\r\n    })\r\n        .then(res => res.data)\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport async function get(url) {\r\n    const headers = {\r\n        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n    };\r\n    try {\r\n        const result = await axios.get(`/api${url}`, {\r\n            headers\r\n        });\r\n        return { data: result.data, status: result.status };\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            const RefreshResult = await Refresh();\r\n            if (RefreshResult.success) {\r\n                try {\r\n                    const headers = {\r\n                        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                    };\r\n\r\n                    const result = await axios.get(`/api${url}`, {\r\n                        headers\r\n                    });\r\n                    return { data: result.data };\r\n                } catch (err) {\r\n                    sessionStorage.removeItem(\"accessToken\");\r\n                    sessionStorage.removeItem(\"refreshToken\");\r\n                    sessionStorage.removeItem(\"uid\");\r\n                    sessionStorage.removeItem(\"persist:root\");\r\n                    window.location.href = \"/login\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function fileDown(url) {\r\n    try {\r\n        const result = await axios.get(`/api${url}`, {\r\n            responseType: \"blob\",\r\n            headers: {\r\n                Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n            }\r\n        });\r\n\r\n        return result;\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            const RefreshResult = await Refresh();\r\n            if (RefreshResult.success) {\r\n                try {\r\n                    const headers = {\r\n                        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                    };\r\n\r\n                    const result = await axios.get(`/api${url}`, {\r\n                        responseType: \"blob\",\r\n                        headers: {\r\n                            Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                        }\r\n                    });\r\n                    return result;\r\n                } catch (err) {\r\n                    sessionStorage.removeItem(\"accessToken\");\r\n                    sessionStorage.removeItem(\"refreshToken\");\r\n                    sessionStorage.removeItem(\"uid\");\r\n                    sessionStorage.removeItem(\"persist:root\");\r\n                    window.location.href = \"/login\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function post(url, data) {\r\n    const headers = {\r\n        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n    };\r\n    try {\r\n        const result = await axios.post(`/api${url}`, data, {\r\n            headers\r\n        });\r\n        return { data: result.data };\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            const RefreshResult = await Refresh();\r\n            if (RefreshResult.success) {\r\n                try {\r\n                    const headers = {\r\n                        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                    };\r\n\r\n                    const result = await axios.post(`/api${url}`, data, {\r\n                        headers\r\n                    });\r\n                    return { data: result.data };\r\n                } catch (err) {\r\n                    sessionStorage.removeItem(\"accessToken\");\r\n                    sessionStorage.removeItem(\"refreshToken\");\r\n                    sessionStorage.removeItem(\"uid\");\r\n                    sessionStorage.removeItem(\"persist:root\");\r\n                    window.location.href = \"/login\";\r\n                }\r\n            }\r\n        } else {\r\n            return err.response;\r\n        }\r\n    }\r\n}\r\nexport async function login(data) {\r\n    const result = await axios.post(`/api/login`, data);\r\n    return { data: result.data };\r\n}\r\n\r\nexport async function put(url, data) {\r\n    const headers = {\r\n        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n    };\r\n    try {\r\n        const result = await axios.put(`/api${url}`, data, {\r\n            headers\r\n        });\r\n        return { data: result.data };\r\n    } catch (err) {\r\n        if (err.response.status === 401) {\r\n            const RefreshResult = await Refresh();\r\n            if (RefreshResult.success) {\r\n                try {\r\n                    const headers = {\r\n                        Authorization: `${sessionStorage.getItem(\"accessToken\")}`\r\n                    };\r\n\r\n                    const result = await axios.put(`/api${url}`, data, {\r\n                        headers\r\n                    });\r\n                    return { data: result.data };\r\n                } catch (err) {\r\n                    sessionStorage.removeItem(\"accessToken\");\r\n                    sessionStorage.removeItem(\"refreshToken\");\r\n                    sessionStorage.removeItem(\"uid\");\r\n                    sessionStorage.removeItem(\"persist:root\");\r\n                    window.location.href = \"/login\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport async function Refresh() {\r\n    const headers = {\r\n        refreshToken: sessionStorage.getItem(\"refreshToken\")\r\n    };\r\n    try {\r\n        const result = await axios.get(`/api/auth/refresh`, {\r\n            headers\r\n        });\r\n\r\n        if (result.data.success === true) {\r\n            sessionStorage.setItem(\"accessToken\", result.data.token.accessToken);\r\n            sessionStorage.setItem(\"refreshToken\", result.data.token.refreshToken);\r\n            return { success: true, data: result.data };\r\n        }\r\n    } catch (err) {\r\n        if (err.response.status) {\r\n            sessionStorage.removeItem(\"accessToken\");\r\n            sessionStorage.removeItem(\"refreshToken\");\r\n            sessionStorage.removeItem(\"uid\");\r\n            sessionStorage.removeItem(\"persist:root\");\r\n            window.location.href = \"/login\";\r\n        }\r\n    }\r\n}","import React, { useState, useRef } from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LoginUser } from \"../../../_actions/UserAction\";\r\nimport { login, get } from \"../../../utils/Axios\";\r\nimport history from \"./../../../history/history\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Login.css\";\r\nconst styles = theme => ({\r\n    paper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        margin: theme.spacing(0, 0, 10, 0)\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n});\r\n\r\nfunction Forms(props) {\r\n    const { classes } = props;\r\n    const ID = useRef(\"\");\r\n    const Password = useRef(\"\");\r\n    const [ErrorMsg, setErrorMsg] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const SubmitLogin = async e => {\r\n        e.preventDefault();\r\n        if (ID.current.value == \"\" || Password.current.value == \"\") {\r\n            setErrorMsg(\"아이디 또는 비밀번호를 입력해주세요.\");\r\n        } else {\r\n            setErrorMsg(\"\");\r\n            const LoginData = {\r\n                userId: ID.current.value,\r\n                password: Password.current.value\r\n            };\r\n\r\n            const loginResult = await login(LoginData);\r\n\r\n            if (loginResult.data.success) {\r\n                const dispatchData = {\r\n                    success: true\r\n                };\r\n                sessionStorage.setItem(\"accessToken\", loginResult.data.accessToken);\r\n                sessionStorage.setItem(\"refreshToken\", loginResult.data.refreshToken);\r\n                \r\n                dispatch(LoginUser(dispatchData));\r\n                history.push(\"/challenge\");\r\n            } else {\r\n                setErrorMsg(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"Loginmargin\">\r\n            <Container maxWidth=\"xs\">\r\n                <div className={classes.paper}>\r\n                    <div className=\"AdminLoginMid\">새싹챌 Admin 페이지</div>\r\n                    <form className={classes.form} noValidate onSubmit={SubmitLogin}>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    placeholder=\"아이디\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    inputRef={ID}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    placeholder=\"비밀번호\"\r\n                                    type=\"password\"\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    inputRef={Password}\r\n                                />\r\n                            </Grid>\r\n                            <div className=\"LoginHelpText\">{ErrorMsg}</div>\r\n                            <button type=\"submit\" className=\"regibtn\">\r\n                                로그인\r\n                            </button>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Forms);\r\n","import { request } from \"../utils/Axios\";\r\n\r\nexport function LoginUser(dataToSubmit) {\r\n    const data = request(\"post\", \"/login\", dataToSubmit);\r\n    return {\r\n        type: \"LOGIN_USER\",\r\n        payload: data\r\n    };\r\n}\r\nexport function LogoutUser() {\r\n    try {\r\n        const data = request(\"get\", \"/logout\");\r\n        return {\r\n            type: \"LOGOUT_USER\",\r\n            payload: data\r\n        };\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\nexport function Auth() {\r\n    const data = request(\"get\", \"/auth\");\r\n    return {\r\n        type: \"AUTH_USER\",\r\n        payload: data\r\n    };\r\n}\r\nexport function Init() {\r\n    return {\r\n        type: \"INIT\"\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport \"./Wargame.css\";\r\n\r\nexport default function Main() {\r\n    return (\r\n        <div className=\"wrap\">\r\n            <div className=\"Lecture\">Admin 강의 메뉴</div>\r\n            <div className=\"_cardlist\">\r\n                <div className=\"_carditem 1\">\r\n                    <a href=\"/challenge/add\">\r\n                        <img src=\"/add.svg\" />\r\n                    </a>\r\n                    <article>\r\n                        <a href=\"/challenge/add\">\r\n                            <h1>워게임 추가</h1>\r\n                        </a>\r\n                    </article>\r\n                </div>\r\n                <div className=\"_carditem 2\">\r\n                    <a href=\"/wargame/list\">\r\n                        <img src=\"/edit.svg\" />\r\n                    </a>\r\n                    <article>\r\n                        <a href=\"/wargame/list\">\r\n                            <h1>워게임 수정</h1>\r\n                        </a>\r\n                    </article>\r\n                </div>\r\n                <div className=\"_carditem 3\">\r\n                    <a href=\"/wargame/listtodel\">\r\n                        <img src=\"/delete.svg\" />\r\n                    </a>\r\n                    <article>\r\n                        <a href=\"/wargame/listtodel\">\r\n                            <h1>워게임 삭제</h1>\r\n                        </a>\r\n                    </article>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { post } from \"../../../utils/Axios\";\r\nimport history from \"../../../history/history\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./Wargame.css\";\r\nexport default function Add() {\r\n    const [CategorySelected, setCategorySelected] = useState(\"null\");\r\n    const [StageSelected, setStageSelected] = useState(0);\r\n    const [File, setFile] = useState(null); //파일\r\n    const [FileName, setFileName] = useState(\"\");\r\n    const ChallengeTitle = useRef(\"\");\r\n    const ChallengeDescription = useRef(\"\");\r\n    const ChallengeFlag = useRef(\"\");\r\n\r\n    const SelectCategory = e => {\r\n        setCategorySelected(e.target.value);\r\n    };\r\n    const SelectStage = e => {\r\n        setStageSelected(e.target.value);\r\n    };\r\n    const SelectFile = e => {\r\n        let reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            const file = reader.result;\r\n            if (file) {\r\n                setFileName(e.target.files[0].name);\r\n                setFile(e.target.files[0]); // 파일 상태 업데이트\r\n            }\r\n        };\r\n        if (e.target.files[0]) {\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const AddChallengeRequest = async () => {\r\n        if (\r\n            ChallengeTitle.current.value !== \"\" &&\r\n            CategorySelected !== \"null\" &&\r\n            StageSelected !== 0 &&\r\n            ChallengeDescription.current.value !== \"\" &&\r\n            ChallengeFlag.current.value !== \"\"\r\n        ) {\r\n\r\n            const changebr = ChallengeDescription.current.value.replace(/\\n/g, \"<br/>\");\r\n\r\n            const result = await post(\"/manage/challenge\", {\r\n                challengeName: ChallengeTitle.current.value,\r\n                challengeDescription: changebr,\r\n                challengeCategory: CategorySelected,\r\n                challengeStage: StageSelected,\r\n                challengeFlag: ChallengeFlag.current.value\r\n            });\r\n\r\n            if (result.data.success === true) {\r\n\r\n                if (File != null) {\r\n                    const uploadResult = await AddChallengeFile(result.data.id);\r\n                    if (uploadResult) {\r\n                        toast.success(\"문제 추가 완료\");\r\n                        history.push(\"/challenge\");\r\n                        return;\r\n                    }\r\n                    else {\r\n                        toast.error(\"문제 추가 실패\");\r\n                        return;\r\n                    }\r\n                }\r\n                toast.success(\"문제 추가 완료\");\r\n                history.push(\"/challenge\");\r\n                return;\r\n            } else {\r\n                toast.error(\"문제 추가 실패\");\r\n                return;\r\n            }\r\n        } else {\r\n            toast.error(\"입력하지 않은 값이 있습니다.\");\r\n            return;\r\n        }\r\n    };\r\n\r\n    const AddChallengeFile = async (id) => {\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", File);\r\n\r\n        const uploadResult = await post(`/manage/challenge/file/${id}`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n\r\n        return uploadResult.data.success\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddChallengewrap\">\r\n            <div className=\"InputChallengeTitle\">\r\n                <TextField\r\n                    label=\"문제 제목\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputProps={{ style: { width: 260, height: 40 } }}\r\n                    inputRef={ChallengeTitle}\r\n                />\r\n            </div>\r\n            <div className=\"InputChallengeCategory\">\r\n                <Select\r\n                    value={CategorySelected}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    onChange={SelectCategory}\r\n                >\r\n                    <MenuItem value={\"null\"}>문제 분야 선택</MenuItem>\r\n                    <MenuItem value={\"reversing\"}>리버싱</MenuItem>\r\n                    <MenuItem value={\"forensic\"}>포렌식</MenuItem>\r\n                    <MenuItem value={\"pwnable\"}>포너블</MenuItem>\r\n                    <MenuItem value={\"web\"}>웹</MenuItem>\r\n                    <MenuItem value={\"misc\"}>MISC</MenuItem>\r\n                    <MenuItem value={\"event\"}>EVENT</MenuItem>\r\n                </Select>\r\n            </div>\r\n            <div className=\"InputChallengeStage\">\r\n                <Select\r\n                    value={StageSelected}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    onChange={SelectStage}\r\n                >\r\n                    <MenuItem value={0}>문제 난이도 선택</MenuItem>\r\n                    <MenuItem value={1}>1단게</MenuItem>\r\n                    <MenuItem value={2}>2단계</MenuItem>\r\n                    <MenuItem value={3}>3단게</MenuItem>\r\n                    <MenuItem value={4}>4단계</MenuItem>\r\n                    <MenuItem value={5}>5단계</MenuItem>\r\n                    <MenuItem value={6}>EVENT</MenuItem>\r\n                </Select>\r\n            </div>\r\n\r\n            <div className=\"InputChallengeTitle\">\r\n                <TextField\r\n                    label=\"문제 설명\"\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    rows={5}\r\n                    InputProps={{ style: { width: 1000 } }}\r\n                    inputRef={ChallengeDescription}\r\n                />\r\n            </div>\r\n            <div className=\"InputChallengeFlag\">\r\n                <TextField\r\n                    label=\"문제 플래그\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputProps={{ style: { width: 400, height: 40 } }}\r\n                    inputRef={ChallengeFlag}\r\n                />\r\n            </div>\r\n            <div className=\"ChallengeFileWrap\">\r\n                <div className=\"ChallengeZip\">\r\n                    <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n                        <input type=\"file\" hidden onChange={SelectFile} />\r\n                        첨부파일 추가하기\r\n                    </Button>\r\n                </div>\r\n                <div className=\"FileName\">첨부된 파일: {FileName}</div>\r\n            </div>\r\n            <div className=\"AddChallengeButton\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"primary\"\r\n                    onClick={AddChallengeRequest}\r\n                >\r\n                    문제 추가하기\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"./../history/history\";\nimport Login from \"./views/Login/Login\";\n// import Admin from \"./views/Admin/Admin\";\n// import NavBar from \"./views/NavBar/NavBar\";\nimport Wargame from \"./views/Wargame/Wargame\";\n// import Notice from \"./views/Notice/Notice\";\nimport { ToastContainer } from \"react-toastify\";\nimport AddWargame from \"./views/Wargame/AddWargame\";\n// import AddNotice from \"./views/Notice/AddNotice\";\n// import WargameList from \"./views/Wargame/WargameList\";\n// import NoticeList from \"./views/Notice/NoticeList\";\n// import EditWargame from \"./views/Wargame/EditWargame\";\n// import EditNotice from \"./views/Notice/EditNotice\";\n// import WargameListtodel from \"./views/Wargame/WargameListtodel\";\n// import NoticeListtodel from \"./views/Notice/NoticeListtodel\";\n// import UserList from \"./views/User/UserList\";\n// import User from \"./views/User/User\";\n// import Log from \"./views/Log/Log\";\n// import LoginLog from \"./views/Log/LoginLog\";\n// import DownloadLog from \"./views/Log/DownloadLog\";\n// import FlagLog from \"./views/Log/FlagLog\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nfunction App() {\n    return (\n        <Router history={history}>\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={3000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                draggable\n                pauseOnHover={false}\n            />\n            <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/challenge\" component={Wargame} />\n                \n                <Route\n                    exact\n                    path=\"/challenge/add\"\n                    component={AddWargame}\n                />\n                \n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    loginSuccess: \"Fail\"\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"LOGIN_USER\":\r\n            return { ...state, loginSuccess: action.payload };\r\n        case \"LOGOUT_USER\":\r\n            return { ...state, loginSuccess: action.payload };\r\n        case \"CHANGE_PROFILEIMG\":\r\n            return { ...state, loginSuccess: action.payload };\r\n        case \"INIT\":\r\n            return { ...state, loginSuccess: \"Fail\" };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport user from \"./UserReducer\";\r\n// import { persistReducer } from \"redux-persist\";\r\nimport promiseMiddlerware from \"redux-promise\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport thunk from \"redux-thunk\";\r\nconst enhancers = [];\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    // localStorage에 저장합니다.\r\n    storage\r\n};\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    storage\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\r\nconst composedEnhancers = compose(applyMiddleware(thunk), applyMiddleware(promiseMiddlerware));\r\n\r\nexport default () => {\r\n    const store = createStore(persistedReducer, composedEnhancers);\r\n    return { store, persistor: persistStore(store) };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport promiseMiddlerware from \"redux-promise\";\nimport reduxThunk from \"redux-thunk\";\nimport reducer from \"./_reducers\";\nimport configureStore from \"./_reducers\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nconst envResult = require(\"dotenv\").config();\nconst createStoreWidthMiddleware = applyMiddleware(\n    promiseMiddlerware,\n    reduxThunk\n)(createStore);\n\nconst { persistor, store } = configureStore();\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}